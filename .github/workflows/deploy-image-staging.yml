name: Create and publish the Docker image for Obstracts Web Staging
# description: This workflow builds a Docker image and pushes it to GitHub Container Registry (GHCR) when changes are pushed to the `staging` branch. It uses secrets in the `obstracts_staging` environment and therefore keeps the visibility as private for the image.

on:
  push:
    branches: ['staging']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}_obstracts_web_staging

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: obstracts_web_staging
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.deploy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # visibility: private
          build-args: |
            EARLIEST_SEARCH_DATE=${{ secrets.EARLIEST_SEARCH_DATE }}
            SCRAPFILE_APIKEY=${{ secrets.SCRAPFILE_APIKEY }}
            WAYBACK_SLEEP_SECONDS=${{ secrets.WAYBACK_SLEEP_SECONDS }}
            WAYBACK_BACKOFF_TIME=${{ secrets.WAYBACK_BACKOFF_TIME }}
            REQUEST_RETRY_COUNT=${{ secrets.REQUEST_RETRY_COUNT }}
            DEFAULT_PAGE_SIZE=${{ secrets.DEFAULT_PAGE_SIZE }} 
            MAX_PAGE_SIZE=${{ secrets.MAX_PAGE_SIZE }}
            DJANGO_SECRET=${{ secrets.DJANGO_SECRET }}
            DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}
            CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=${{ secrets.CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true